name: Manual Workflow Dispatch

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy (e.g., staging, production)'
        required: true
        default: 'staging'
      version:
        description: 'Application version to deploy'
        required: false
        default: '1.0.0'
      deploy_user:
        description: 'User account for deployment'
        required: false
        default: 'deployer'
      region:
        type: choice
        options:
          - eu-west
          - us-east
          - ap-south
        default: eu-west
        description: 'Region for deployment'
      run_migrations:
        type: boolean
        description: 'Whether to run database migrations'
        default: true
      api_token:
        description: 'API token for external services'
        required: false
      domain:
        description: 'Domain name for the application'
        default: 'example.com'
      config:
        type: choice
        options:
          - dev
          - prod
          - custom
        default: dev
      clear_cache:
        type: boolean
        description: 'Clear cache after deployment'
        default: false
      notes:
        description: 'Additional notes or description for this deployment'
        required: false

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Display environment
        run: echo "Deploying to environment: ${{ inputs.environment }}"

      - name: Display version
        if: inputs.version != ''
        run: echo "Deploying version: ${{ inputs.version }}"

      - name: Display user
        run: echo "Deploying as user: ${{ inputs.deploy_user }}"

      - name: Display region
        run: echo "Deployment region: ${{ inputs.region }}"

      - name: Run database migrations?
        run: echo "Run migrations: ${{ inputs.run_migrations }}"

      - name: Use API token
        if: inputs.api_token != ''
        run: echo "Using API token: *********"

      - name: Domain name
        run: echo "Domain: ${{ inputs.domain }}"

      - name:
